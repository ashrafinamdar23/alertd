@model Coe.UI.Models.DataTableModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var tableClasses = "table table-sm " + (Model.Striped ? "table-striped " : "") + (Model.Center ? "text-center " : "") + (Model.Hover ? "table-hover " : "");
}
<div class="table-responsive">
    <table class="@tableClasses">
        <thead>
            <tr>
                @foreach (var col in Model.Columns)
                {
                    <th style="@(col.WidthStyle ?? "")" class="@(col.AlignClass ?? "")">@col.Header</th>
                }
                @if (Model.Rows.Any(r => r.Actions?.Count > 0))
                {
                    <th style="width:160px;"></th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var row in Model.Rows)
            {
                <tr>
                    @foreach (var col in Model.Columns)
                    {
                        row.Cells.TryGetValue(col.Key, out var val);
                        <td class="@(col.AlignClass ?? "")">@Html.Raw(val ?? "")</td>
                    }

                    @if (row.Actions?.Count > 0)
                    {
                        <td class="text-end">
                            @foreach (var a in row.Actions)
                            {
                                if (a.Type == Coe.UI.Models.DataTableActionType.Link && !string.IsNullOrWhiteSpace(a.Href))
                                {
                                    <a class="@a.Class" href="@a.Href">@a.Text</a>
                                }
                                else if (a.Type == Coe.UI.Models.DataTableActionType.Post && !string.IsNullOrWhiteSpace(a.FormAction))
                                {
                                    <form method="post" action="@a.FormAction" class="d-inline">
                                        @* Hidden fields *@
                                        @if (a.Hidden != null)
                                        {
                                            foreach (var kv in a.Hidden)
                                            {
                                                <input type="hidden" name="@kv.Key" value="@kv.Value" />
                                            }
                                        }
                                        <button type="button"
                                                class="@a.Class"
                                                data-coe-post
                                                data-coe-confirm-title="@a.ConfirmTitle"
                                                data-coe-confirm-body="@a.ConfirmBody"
                                                data-coe-confirm-class="@a.ConfirmClass">
                                            @a.Text
                                        </button>
                                    </form>
                                }
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>
